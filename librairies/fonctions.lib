<!--
    Nom : Keven Imbeault
    Date : 28 Janvier 2021
    But : Créer des fonctions en PHP afin de générer du contenu à partir d'une base de données
-->

<?php 
    function connectDB(&$db) {
        try {
            $db = new PDO('mysql:host=localhost;dbname=imbk25099802;charset=utf8', 'root', 'info420');
            $db -> setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (Exception $e) {
            echo "Echec : " . $e -> getMessage();
        }
    }

    function displayProduit(&$db) {
        // Prépare la requête pour prendre les données nécessaire de la bd
        $select = $db -> prepare("SELECT idProduit, nomProduit, prix, description from produit_fr");
        $select -> setFetchMode(PDO::FETCH_OBJ);

        $select -> execute();

        // Commence un compteur, utiliser pour déterminer si une nouvelle "row" doit être créer
        $count = 0;

        while($line = $select->fetch(PDO::FETCH_OBJ))
        {
            // Incrémente le compteur (qui commence à 0) donc, les cols 1 à 4 sont créer
            $count++;

            // Si la première colomne d'une rangée sera créer, ajouter la balise pour commencer la nouvelle rangée !
            if($count == 1) {
                print("<div class='row row-cols-1 row-cols-sm-2 row-cols-md-4'>");
            }

            print("<div class='col'>");

            // Nom du produit
            print("<h4>". $line -> nomProduit ."</h4>");

            // Image du produit
            print("<img src='images/produits/" . $line -> idProduit . ".jpg'>");

            // Prix du produit
            print("<p>" . sprintf('%01.2f', $line -> prix) . " $</p>");

            // Boutons sous le prix du produit
            print("<div class='btn-group' role='group' aria-label='Basic example'>");

                // Bouton "Plus d'infos" qui ouvre le modal
                print("<button type='button' class='btn btn-primary' data-bs-toggle='modal' data-bs-target='#product" . $line -> idProduit . "Modal'>Plus d'infos</button>");

                // Bouton "Acheter" pour ajouter au panier... Implémentation future
                print("<button type='button' class='btn btn-outline-primary' onclick='addRedirect(" . $line -> idProduit . ")'>Acheter</button>");
            print("</div>");


            print("</div>");

            // Si la colomne en cours est la quatrième, il faut ferme sa rangée !
            if($count == 4) {
                print("</div>");
                $count = 0;
            }

            //
            //  MODAL POUR AFFICHAGE DE LA DESCRIPTION DES PRODUITS
            //

            print("
                <div class='modal fade' id='product" . $line -> idProduit . "Modal' tabindex='-1' aria-labelledby='product" . $line -> idProduit . "ModalLabel' aria-hidden='true'>
                  <div class='modal-dialog'>
                    <div class='modal-content'>
            ");

            // Titre du modal et bouton "X"
            print("
                  <div class='modal-header'>
                    <h5 class='modal-title' id='product" . $line -> idProduit . "ModalLabel'>Description du produit</h5>
                    <button type='button' class='btn-close' data-bs-dismiss='modal' aria-label='Close'></button>
                  </div>
            ");

            // Contenu du modal
            print("
                  <div class='modal-body'>
                    <p>" . $line -> description . "</p>
                  </div>
            ");

            print("
                    </div>
                  </div>
                </div>
            ");
        }

        $select -> closeCursor();
    }

    /**
     * Fonction pour afficher le panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
    */
    function displayPanier(&$db, &$idPanier) {

        // Prépare la requête pour prendre les données nécessaire de la bd
        $select = $db -> prepare("SELECT noProduit, quantite FROM panier WHERE idPanier = ?");
        $select -> setFetchMode(PDO::FETCH_OBJ);

        // Prépare la requête pour obtenir le nom d'un produit
        $selectProductName = $db -> prepare("SELECT nomProduit FROM produit_fr WHERE idProduit = ?");
        $selectProductName -> setFetchMode(PDO::FETCH_OBJ);

        $select -> execute([$idPanier]);

        // Commence un compteur, utiliser pour déterminer si une nouvelle "row" doit être créer
        $count = 0;

        while($line = $select->fetch(PDO::FETCH_OBJ)) {
            $noProduit = $line -> noProduit;

            $selectProductName -> execute([$noProduit]);

            print("<div class='orderItem'>");

            print("<p><b>Produit : </b>" . $selectProductName -> fetch() -> nomProduit . "</p>");

            print("<label for='" . $noProduit . "'><b>Quantité :</b></label>");

            print("<input type='number' min='0' id='produit" . $noProduit . "' name='produit" . $noProduit . "' value='" . $line -> quantite . "'/>");

            print("<br /><button type='button' class='btn btn-danger' onclick='removeRedirect(" . $noProduit . ")'>Supprimer</button>");

            print("</div>");
        }

        $select -> closeCursor();
    }

    /**
     * Fonction permettant d'ajouter un item au panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
     * @param $idProduit Id du produit à ajouter au panier.
     */
    function addItem(&$db, &$idPanier, &$idProduit) {
        // Prépare la requête afin de vérifier si le panier contient déjà un item du même type
        $select = $db -> prepare("SELECT * FROM panier WHERE idPanier = ? AND noProduit = ?");
        $select -> setFetchMode(PDO::FETCH_OBJ);

        // Éxecute la requête en lui donnant l'id panier de l'utilisateur et l'id du produit à vérifier
        $select -> execute([$idPanier, $idProduit]);

        if($select -> rowCount() == 1) {
            // Si un produit du même type est déjà dans le panier, augmenter sa quantité de 1
            $line = $select -> fetch(PDO::FETCH_OBJ);
            $newQte = $line -> quantite + 1;

            $update = $db -> prepare("UPDATE panier SET quantite = ? WHERE idPanier = ? AND noProduit = ?");
            $update -> execute([$newQte, $idPanier, $idProduit]);

        } else if($select -> rowCount() == 0) {
            // Si aucun produit du même type à été ajouter au panier, ajouter l'item
            // | idPanier | noProduit | quantite | datePanier |
            $insert = $db -> prepare("INSERT INTO panier VALUES(?,?,?,?)");
            $insert -> execute([$idPanier, $idProduit, 1, date("Y-m-d H:i:s")]);
        } else {
            echo "Plus d'une ligne avec l'item désiré !";
            return;
        }


        // Affiche le panier de l'utilisateur
        displayPanier($db, $idPanier);
    }

    /**
     * Fonction permettant de retirer un item du panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
     * @param $idProduit Id du produit à retirer du panier.
     */
    function removeItem(&$db, &$idPanier, &$idProduit) {
        // Prépare la requête pour insérer l'item ajouter au panier de l'utilisateur
        $insert = $db -> prepare("DELETE FROM panier WHERE idPanier = ? AND noProduit = ?");

        // Exécute la requête en lui donnant les données nécessaires
        // | idPanier | noProduit | quantite | datePanier |
        $insert -> execute([$idPanier, $idProduit]);


        // Affiche le panier de l'utilisateur
        displayPanier($db, $idPanier);
    }

    /**
     * Fonction permettant de modifier la quantité des items du panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
     * @param $post Variable pour passer les valeur de la variable _POST.
     */
    function modifyQuantities(&$db, &$idPanier, $post) {
        // Prépare la requête pour insérer l'item ajouter au panier de l'utilisateur
        $updateQuantity = $db -> prepare("UPDATE panier SET quantite = ? WHERE idPanier = ? AND noProduit = ?");

        // Prépare et execute une requête pour obtenir le noProduit de tous les produits à l'intérieur d'un panier
        $selectProductId = $db -> prepare("SELECT noProduit FROM panier WHERE idPanier = ?");
        $selectProductId -> execute([$idPanier]);

        while($line = $selectProductId -> fetch(PDO::FETCH_OBJ)) {
            // Pour chaque produit dans un panier :
            //      - Vérifier si la nouvelle quantité est 0, si tel est le cas, retirer l'item du panier
            //      - Si la nouvelle quantité est plus grande que 0, modifier la quantité de l'item dans le panier
            //      - Si la nouvelle quantité est tout autre chiffre, afficher un message d'erreur et terminer la fonction
            $noProduit = $line -> noProduit;
            $newQte = $post["produit" . $noProduit];

            if($newQte == 0) {
                removeItem($db, $idPanier, $noProduit);
            } else if ($newQte > 0) {
                $updateQuantity -> execute([$newQte, $idPanier, $noProduit]);
            } else {
                echo "ERRER : modifyQuantities() - Quantité invalide !";
                return;
            }

        }

        // Affiche le panier de l'utilisateur
        displayPanier($db, $idPanier);
    }

?>