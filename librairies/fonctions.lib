<!--
    Nom : Keven Imbeault
    Date : 28 Janvier 2021
    But : Créer des fonctions en PHP afin de générer du contenu à partir d'une base de données
-->

<?php 
    function connectDB(&$db) {
        try {
            $db = new PDO('mysql:host=localhost;dbname=imbk25099802;charset=utf8', 'root', 'info420');
            $db -> setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (Exception $e) {
            echo "Echec : " . $e -> getMessage();
        }
    }

    function displayProduit(&$db) {
        // Prépare la requête pour prendre les données nécessaire de la bd
        $select = $db -> prepare("SELECT idProduit, nomProduit, prix, description from produit_fr");
        $select -> setFetchMode(PDO::FETCH_OBJ);

        $select -> execute();

        // Commence un compteur, utiliser pour déterminer si une nouvelle "row" doit être créer
        $count = 0;

        while($line = $select->fetch(PDO::FETCH_OBJ))
        {
            // Incrémente le compteur (qui commence à 0) donc, les cols 1 à 4 sont créer
            $count++;

            // Si la première colomne d'une rangée sera créer, ajouter la balise pour commencer la nouvelle rangée !
            if($count == 1) {
                print("<div class='row row-cols-1 row-cols-sm-2 row-cols-md-4'>");
            }

            print("<div class='col'>");

            // Nom du produit
            print("<h4>". $line -> nomProduit ."</h4>");

            // Image du produit
            print("<img src='images/produits/" . $line -> idProduit . ".jpg'>");

            // Prix du produit
            print("<p>" . sprintf('%01.2f', $line -> prix) . " $</p>");

            // Boutons sous le prix du produit
            print("<div class='btn-group' role='group' aria-label='Basic example'>");

                // Bouton "Plus d'infos" qui ouvre le modal
                print("<button type='button' class='btn btn-primary' data-bs-toggle='modal' data-bs-target='#product" . $line -> idProduit . "Modal'>Plus d'infos</button>");

                // Bouton "Acheter" pour ajouter au panier... Implémentation future
                print("<button type='button' class='btn btn-outline-primary' onclick='addRedirect(" . $line -> idProduit . ")'>Acheter</button>");
            print("</div>");


            print("</div>");

            // Si la colomne en cours est la quatrième, il faut ferme sa rangée !
            if($count == 4) {
                print("</div>");
                $count = 0;
            }

            //
            //  MODAL POUR AFFICHAGE DE LA DESCRIPTION DES PRODUITS
            //

            print("
                <div class='modal fade' id='product" . $line -> idProduit . "Modal' tabindex='-1' aria-labelledby='product" . $line -> idProduit . "ModalLabel' aria-hidden='true'>
                  <div class='modal-dialog'>
                    <div class='modal-content'>
            ");

            // Titre du modal et bouton "X"
            print("
                  <div class='modal-header'>
                    <h5 class='modal-title' id='product" . $line -> idProduit . "ModalLabel'>Description du produit</h5>
                    <button type='button' class='btn-close' data-bs-dismiss='modal' aria-label='Close'></button>
                  </div>
            ");

            // Contenu du modal
            print("
                  <div class='modal-body'>
                    <p>" . $line -> description . "</p>
                  </div>
            ");

            print("
                    </div>
                  </div>
                </div>
            ");
        }

        $select -> closeCursor();
    }

    /**
     * Fonction pour afficher le panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
     * @param null $post Paramètre optionnel
     */
    function displayPanier(&$db, &$idPanier, &$post = null) {
        //TODO : Affichage lorsque le panier est vide

        // Prépare la requête pour prendre les données nécessaire de la bd
        $select = $db -> prepare("SELECT noProduit, quantite FROM panier WHERE idPanier = ?");
        $select -> setFetchMode(PDO::FETCH_OBJ);

        // Prépare la requête pour obtenir le nom d'un produit
        $selectProductName = $db -> prepare("SELECT nomProduit FROM produit_fr WHERE idProduit = ?");
        $selectProductName -> setFetchMode(PDO::FETCH_OBJ);

        $select -> execute([$idPanier]);

        // Si le panier est vide, affiche que la commande est vide et termine la fonction
        if($select -> rowCount() == 0) {
            print("<p>Votre commande est vide !</p>");
            $select -> closeCursor();
            return;
        }

        while($line = $select->fetch(PDO::FETCH_OBJ)) {
            $noProduit = $line -> noProduit;

            $selectProductName -> execute([$noProduit]);

            print("<div class='orderItem'>");

            print("<p><b>Produit : </b>" . $selectProductName -> fetch() -> nomProduit . "</p>");

            print("<label for='" . $noProduit . "'><b>Quantité :</b></label>");

            print("<input type='number' min='0' id='produit" . $noProduit . "' name='produit" . $noProduit . "' value='" . $line -> quantite . "'/>");

            print("<br /><button type='button' class='btn btn-danger' onclick='removeRedirect(" . $noProduit . ")'>Supprimer</button>");

            print("</div>");
        }

        $total = amountCalculation($db, $idPanier);

        print("<input type='radio' id='transportRamassage' name='transport' value='ramassage' onclick='updateAmount(" . $total . ")' checked>Ramassage au magasin</input>");
        print("<input type='radio' id='transportLivraison' name='transport' value='livraison' onclick='updateAmount(" . $total . ")'>Livraison*</input>");


        print("<input id='totalAmount' type='hidden' value='" . $total . "'>");
        print("<p>Montant total de la facture (taxes incluses) : <span id='totalAmountSpan'>" . $total . "</span> $</p>");

        print('<div class="btn-group" role="group">
                    <button type="submit" class="btn btn-primary">Mettre à jour</button>
                    <button type="button" class="btn btn-light" onclick="mailRedirect(askEmailAddress())">Envoyer un courriel</button>
               </div>');

        print("<p><b>Attention, des frais de 10$ seront rajoutés aux commandes inférieurs à 100$ (avant taxes).</b></p>");

        $select -> closeCursor();
    }

    /**
     * Fonction permettant d'ajouter un item au panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
     * @param $idProduit Id du produit à ajouter au panier.
     */
    function addItem(&$db, &$idPanier, &$idProduit) {
        // Prépare la requête afin de vérifier si le panier contient déjà un item du même type
        $select = $db -> prepare("SELECT * FROM panier WHERE idPanier = ? AND noProduit = ?");
        $select -> setFetchMode(PDO::FETCH_OBJ);

        // Éxecute la requête en lui donnant l'id panier de l'utilisateur et l'id du produit à vérifier
        $select -> execute([$idPanier, $idProduit]);

        if($select -> rowCount() == 1) {
            // Si un produit du même type est déjà dans le panier, augmenter sa quantité de 1
            $line = $select -> fetch(PDO::FETCH_OBJ);
            $newQte = $line -> quantite + 1;

            $update = $db -> prepare("UPDATE panier SET quantite = ? WHERE idPanier = ? AND noProduit = ?");
            $update -> execute([$newQte, $idPanier, $idProduit]);

        } else if($select -> rowCount() == 0) {
            // Si aucun produit du même type à été ajouter au panier, ajouter l'item
            // | idPanier | noProduit | quantite | datePanier |
            $insert = $db -> prepare("INSERT INTO panier VALUES(?,?,?,?)");
            $insert -> execute([$idPanier, $idProduit, 1, date("Y-m-d H:i:s")]);
        } else {
            echo "Plus d'une ligne avec l'item désiré !";
            return;
        }


        // Affiche le panier de l'utilisateur
        displayPanier($db, $idPanier);
    }

    /**
     * Fonction permettant de retirer un item du panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
     * @param $idProduit Id du produit à retirer du panier.
     */
    function removeItem(&$db, &$idPanier, &$idProduit) {
        // Prépare la requête pour insérer l'item ajouter au panier de l'utilisateur
        $insert = $db -> prepare("DELETE FROM panier WHERE idPanier = ? AND noProduit = ?");

        // Exécute la requête en lui donnant les données nécessaires
        // | idPanier | noProduit | quantite | datePanier |
        $insert -> execute([$idPanier, $idProduit]);


        // Affiche le panier de l'utilisateur
        displayPanier($db, $idPanier);
    }

    /**
     * Fonction permettant de modifier la quantité des items du panier de l'utilisateur
     * @param $db Connection à la base de donnée sur laquel faire des requêtes.
     * @param $idPanier Id du panier de l'utilisateur.
     * @param $post Variable pour passer les valeur de la variable _POST.
     */
    function modifyQuantities(&$db, &$idPanier, $post) {
        // Prépare la requête pour insérer l'item ajouter au panier de l'utilisateur
        $updateQuantity = $db -> prepare("UPDATE panier SET quantite = ? WHERE idPanier = ? AND noProduit = ?");

        // Prépare et execute une requête pour obtenir le noProduit de tous les produits à l'intérieur d'un panier
        $selectProductId = $db -> prepare("SELECT noProduit FROM panier WHERE idPanier = ?");
        $selectProductId -> execute([$idPanier]);

        while($line = $selectProductId -> fetch(PDO::FETCH_OBJ)) {
            // Pour chaque produit dans un panier :
            //      - Vérifier si la nouvelle quantité est 0, si tel est le cas, retirer l'item du panier
            //      - Si la nouvelle quantité est plus grande que 0, modifier la quantité de l'item dans le panier
            //      - Si la nouvelle quantité est tout autre chiffre, afficher un message d'erreur et terminer la fonction
            $noProduit = $line -> noProduit;
            $newQte = $post["produit" . $noProduit];

            if($newQte == 0) {
                removeItem($db, $idPanier, $noProduit);
            } else if ($newQte > 0) {
                $updateQuantity -> execute([$newQte, $idPanier, $noProduit]);
            } else {
                echo "ERRER : modifyQuantities() - Quantité invalide !";
                return;
            }

        }

        // Affiche le panier de l'utilisateur
        displayPanier($db, $idPanier);
    }

    function amountCalculation (&$db, &$idPanier) {
        $subtotal = 0;

        // Prépare et execute une requête pour obtenir le noProduit et la quantité de tous les produits à l'intérieur d'un panier
        $select = $db -> prepare("SELECT noProduit, quantite FROM panier WHERE idPanier = ?");
        $select -> execute([$idPanier]);

        // Prépare et execute une requête pour obtenir le prix de tous les produits à l'intérieur d'un panier
        $selectPrice = $db -> prepare("SELECT prix FROM produit_fr WHERE idProduit = ?");

        while($line = $select -> fetch(PDO::FETCH_OBJ)) {
            // Pour chaque produit dans un panier :
            //      - Trouve son prix
            //      - Ajoute le prix au sous-total
            $noProduit = $line -> noProduit;
            $selectPrice -> execute([$noProduit]);
            $price = $selectPrice -> fetch(PDO::FETCH_OBJ) -> prix;

            $subtotal = $subtotal + $price * $line -> quantite;
        }

        return number_format($subtotal * 1.14975, 2);
    }

    function sendEmail(&$db, &$idPanier, &$email) {
        echo "Merci d'avoir commandé chez Magasin du coin ! Votre commande devrait arriver dans quelques jours !";

        $select = $db -> prepare("SELECT noProduit, quantite FROM panier WHERE idPanier = ?");
        $select -> execute([$idPanier]);

        $selectProductName = $db -> prepare("SELECT nomProduit FROM produit_fr WHERE idProduit = ?");

        $mail = $email;
        $entete = "From:etudiant.info@collegealma.ca\r\n";
        $objet = "Magasin du coin - Confirmation de votre commande";

        $texte = "Bonjour,\r\n";
        $texte .= "Nous vous remercions d'avoir magasiné chez Magasin du coin !\r\n";
        $texte .= "Nos employés s'affairent à préparer votre commande plus grande satisfaction.\r\n";
        $texte .= "\r\n";
        $texte .= "Votre commande :\r\n";

        // Ajoute chaque article du panier au contenu du message
        while ($line = $select -> fetch(PDO::FETCH_OBJ)){
            $productQuantity = $line -> quantite;
            $selectProductName -> execute([$line -> noProduit]);
            $productName = $selectProductName -> fetch(PDO::FETCH_OBJ) -> nomProduit;

            $texte .= $productQuantity . " x " . $productName . "\r\n";
        }

        $texte .= "Total : " . amountCalculation($db, $idPanier) . "\r\n";
        $texte .= "\r\n";
        $texte .= "Nous espérons que vous magasinerez de nous chez nous !\r\n";
        $texte .= "L'équipe du Magasin du coin";
        $texte = wordwrap($texte, 70, "\r\n", true);

        // Send email
        mail($mail,$objet,$texte,$entete);
    }

    function deletePanier(&$db, &$idPanier) {
        $delete = $db -> prepare("DELETE FROM panier WHERE idPanier = ?");
        $delete -> execute([$idPanier]);
    }

    function ajouterUsagerAdmin($bd, $mp, $nom, $courriel) {
        $mp = password_hash($mp, PASSWORD_DEFAULT);
        $data = [
            'nom' => $nom,
            'mp' => $mp,
            'courriel' => $courriel
        ];

        $requete = $bd -> prepare ("INSERT INTO usager(nom, motPasse, courriel) VALUES(:nom, :mp, :courriel)");
        $requete -> execute($data);
    }

    function validerConnexion($bd, $courriel, $mp) {
        $valide = true;
        $nb = 0;
        $requete = $bd -> prepare("SELECT * FROM usager WHERE courriel=:courriel");
        $requete -> execute(array('courriel' => $courriel));

        $nb = $requete -> rowCount();

        if($nb != 0) {
            $ligne = $requete -> fetch();

            if(password_verify($mp, $ligne['motPasse'])) {
                $valide = true;
            } else {
                $valide = false;
            }
        } else {
            $valide = false;
        }

        return $valide;
    }

    function sendLostPasswordEmail(&$db, &$email) {
        $select = $db -> prepare("SELECT idUsager FROM usager WHERE courriel=:courriel");
        $select -> execute(array("courriel" => $email));

        if($select -> rowCount() == 0) {
            echo "Aucun compte avec cette addresse courriel !";
            return;
        }

        $line = $select -> fetch(PDO::FETCH_OBJ);

        $lien = "http://" . $_SERVER['HTTP_HOST'] . dirname($_SERVER['REQUEST_URI']) . "/motpasse.php";
        //Ajout de l'heure d'envoie du lien
        $lien .= "?no=" . time();
        $lien .= "&id=" . password_hash($line -> idUsager, PASSWORD_DEFAULT);

        $mail = $email;
        $entete = "From:etudiant.info@collegealma.ca\r\n";
        $objet = "Magasin du coin - Mot de passe oublié";

        $texte = "Bonjour,\r\n";
        $texte .= "Vous avez fait une demande pour réinitialiser votre mot de passe. Pour ce faire, cliquer sur le lien suivant :\r\n";
        $texte .= $lien . "\r\n";
        $texte .= "Attention, ce lien n'est valide que pour les 5 prochaines minutes. Dépassez ce délai, vous devrez refaire une nouvelle demande\r\n";
        $texte .= "Meilleures salutation,\r\n";
        $texte .= "L'équipe du Magasin du Coin !\r\n";
        $texte = wordwrap($texte, 70, "\r\n", false);

        // Send email
        mail($mail,$objet,$texte,$entete);
    }

    function printNameByEncryptedId(&$db, &$id) {
        $select = $db -> prepare("SELECT idUsager, nom FROM usager");
        $select -> execute();

        while($line = $select -> fetch(PDO::FETCH_OBJ)){
            if(password_verify($line -> idUsager, $id)) {
                print("Bonjour " . $line -> nom);
            }
        }
    }

    function modifyUserPassword(&$db, &$id, &$newPassword) {
        $select = $db -> prepare("SELECT idUsager, nom FROM usager");
        $select -> execute();

        while($line = $select -> fetch(PDO::FETCH_OBJ)){
            if(password_verify($line -> idUsager, $id)) {
                $update = $db -> prepare("UPDATE usager SET motPasse=:mp WHERE idUsager=:idUsager");
                $update -> execute(array('mp' => password_hash($newPassword, PASSWORD_DEFAULT), 'idUsager' => $line -> idUsager));
            }
        }
    }
?>